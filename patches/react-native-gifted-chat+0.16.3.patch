diff --git a/node_modules/react-native-gifted-chat/lib/MessageContainer.js b/node_modules/react-native-gifted-chat/lib/MessageContainer.js
index 193772a..9a18c8e 100644
--- a/node_modules/react-native-gifted-chat/lib/MessageContainer.js
+++ b/node_modules/react-native-gifted-chat/lib/MessageContainer.js
@@ -47,26 +47,26 @@ const styles = StyleSheet.create({
     },
 });
 export default class MessageContainer extends React.PureComponent {
+    
     constructor() {
         super(...arguments);
         this.state = {
             showScrollBottom: false,
         };
+        this.listeners = [];
         this.attachKeyboardListeners = () => {
             const { invertibleScrollViewProps: invertibleProps } = this.props;
             if (invertibleProps) {
-                Keyboard.addListener('keyboardWillShow', invertibleProps.onKeyboardWillShow);
-                Keyboard.addListener('keyboardDidShow', invertibleProps.onKeyboardDidShow);
-                Keyboard.addListener('keyboardWillHide', invertibleProps.onKeyboardWillHide);
-                Keyboard.addListener('keyboardDidHide', invertibleProps.onKeyboardDidHide);
+this.listeners.push(Keyboard.addListener('keyboardWillShow', invertibleProps.onKeyboardWillShow));
+this.listeners.push(Keyboard.addListener('keyboardDidShow', invertibleProps.onKeyboardDidShow));
+this.listeners.push(Keyboard.addListener('keyboardWillHide', invertibleProps.onKeyboardWillHide));
+this.listeners.push(Keyboard.addListener('keyboardDidHide', invertibleProps.onKeyboardDidHide));
             }
         };
         this.detachKeyboardListeners = () => {
-            const { invertibleScrollViewProps: invertibleProps } = this.props;
-            Keyboard.removeListener('keyboardWillShow', invertibleProps.onKeyboardWillShow);
-            Keyboard.removeListener('keyboardDidShow', invertibleProps.onKeyboardDidShow);
-            Keyboard.removeListener('keyboardWillHide', invertibleProps.onKeyboardWillHide);
-            Keyboard.removeListener('keyboardDidHide', invertibleProps.onKeyboardDidHide);
+// looping over every registered listeners and removing them directly
+this.listeners.forEach(listener => !!listener && listener.remove());
+this.listeners = [];
         };
         this.renderTypingIndicator = () => {
             if (Platform.OS === 'web') {
